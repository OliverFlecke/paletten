{"version":3,"sources":["models.ts","Button.tsx","PlaceState.tsx","Shelly.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["State","Button","color","children","className","onClick","mapColor","PlaceState","state","name","temperature","humidity","Shelly","shelly","toggle","useCallback","setShellyState","stateToColor","size","default_shellies","id","client","connect","publish","getPlace","topic","match","groups","undefined","Off","On","usePlace","useState","setTemperature","setHumidity","App","inside","setters","outside","outSetters","shellies","setShellies","ids","map","x","useEffect","on","console","log","forEach","subscribe","err","error","message","startsWith","Number","newState","toString","xs","s","allOn","allOff","DesiredTemperature","onDesiredTemperatureChange","event","value","currentTarget","valueAsNumber","retain","temp","unsubscribe","type","min","max","onChange","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6125720b.chunk.js","sourcesContent":["export enum State {\n\tOn,\n\tOff,\n}\n\nexport interface IShelly {\n\tid: string;\n\tname: string;\n\tstate?: State;\n}\n\nexport interface IPlace {\n\ttemperature?: number;\n\thumidity?: number;\n}\n","import React from 'react';\n\ninterface ButtonProps {\n\tchildren: JSX.Element[] | string;\n\tonClick: () => void;\n\tcolor?: string;\n\tclassName?: string;\n}\n\nexport const Button = ({\n\tcolor,\n\tchildren,\n\tclassName,\n\tonClick,\n}: ButtonProps) => (\n\t<button\n\t\tonClick={onClick}\n\t\tclassName={`text-white p-2 m-2 text-xl rounded ${mapColor(\n\t\t\tcolor ?? 'blue'\n\t\t)} ${className}`}\n\t>\n\t\t{children}\n\t</button>\n);\n\nfunction mapColor(color: string) {\n\tswitch (color) {\n\t\tcase 'blue':\n\t\t\treturn 'bg-blue-900';\n\t\tcase 'red':\n\t\t\treturn 'bg-red-900';\n\t\tcase 'green':\n\t\t\treturn 'bg-green-900';\n\n\t\tdefault:\n\t\t\treturn 'bg-gray-700';\n\t}\n}\n","import React from 'react';\nimport { IPlace } from './models';\n\ninterface PlaceStateProps {\n\tstate: IPlace;\n\tname: string;\n}\n\nexport const PlaceState = ({ state, name }: PlaceStateProps) => {\n\treturn (\n\t\t<div className=\"w-full max-w-xs\">\n\t\t\t<h3 className=\"text-xl\">{name}</h3>\n\n\t\t\t<div className=\"flex justify-between w-full\">\n\t\t\t\tTemperatur: <span>{state.temperature} &#176;C</span>\n\t\t\t</div>\n\t\t\t<div className=\"flex justify-between w-full\">\n\t\t\t\tFugtighed:\n\t\t\t\t<span>{state.humidity} %</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React, { useCallback } from 'react';\nimport { IoMdPower } from 'react-icons/io';\nimport { setShellyState, stateToColor } from './App';\nimport { Button } from './Button';\nimport { IShelly } from './models';\n\nexport const Shelly = ({ shelly }: { shelly: IShelly }) => {\n\tconst toggle = useCallback(() => {\n\t\tsetShellyState(shelly);\n\t}, [shelly]);\n\n\treturn (\n\t\t<Button onClick={toggle} color={stateToColor(shelly.state)}>\n\t\t\t<span className=\"inline-flex flex-col h-full justify-center px-2\">\n\t\t\t\t<IoMdPower size=\"20px\" />\n\t\t\t</span>\n\t\t\t<span>{shelly.name}</span>\n\t\t</Button>\n\t);\n};\n","import { connect } from 'mqtt';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Button } from './Button';\nimport { IPlace, IShelly, State } from './models';\nimport { PlaceState } from './PlaceState';\nimport { Shelly } from './Shelly';\n\nconst url = 'wss://palletten.northeurope.azurecontainer.io:8083';\nconst default_shellies: IShelly[] = [\n\t{ id: 'C4402D', name: 'Spisebord' },\n\t{ id: 'C431FB', name: 'Sofa' },\n\t{ id: '10DB9C', name: 'Sovev√¶relse' },\n];\n\nconst client = connect(url);\n\nexport function setShellyState(shelly: IShelly, state = 'toggle') {\n\tclient.publish(`shellies/shelly1-${shelly.id}/relay/0/command`, state);\n}\n\nfunction getPlace(topic: string): string | undefined {\n\tconst match = topic.match(/\\/(?<place>\\w+)$/);\n\treturn match?.groups ? match?.groups['place'] : undefined;\n}\n\nexport function stateToColor(state?: State): string {\n\tswitch (state) {\n\t\tcase State.Off:\n\t\t\treturn 'red';\n\t\tcase State.On:\n\t\t\treturn 'green';\n\n\t\tdefault:\n\t\t\treturn 'grey';\n\t}\n}\n\nfunction usePlace(): [\n\tIPlace,\n\t{\n\t\tsetTemperature: React.Dispatch<React.SetStateAction<number | undefined>>;\n\t\tsetHumidity: React.Dispatch<React.SetStateAction<number | undefined>>;\n\t}\n] {\n\tconst [temperature, setTemperature] = useState<number | undefined>();\n\tconst [humidity, setHumidity] = useState<number | undefined>();\n\n\treturn [\n\t\t{ temperature, humidity },\n\t\t{ setTemperature, setHumidity },\n\t];\n}\n\nfunction App() {\n\tconst [inside, setters] = usePlace();\n\tconst [outside, outSetters] = usePlace();\n\n\tconst [shellies, setShellies] = useState<IShelly[]>(default_shellies);\n\tconst ids = shellies.map((x) => x.id);\n\n\tuseEffect(() => {\n\t\tclient.on('connect', () => {\n\t\t\tconsole.log('connected');\n\n\t\t\tids.forEach((id) => {\n\t\t\t\tclient.subscribe(`shellies/shelly1-${id}/relay/0`, (err) =>\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t);\n\t\t\t});\n\t\t\t['inside', 'outside'].forEach((x) => {\n\t\t\t\tclient.subscribe(`temperature/${x}`, (err) => console.error(err));\n\t\t\t\tclient.subscribe(`humidity/${x}`, (err) => console.error(err));\n\t\t\t});\n\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\tclient.on('message', (topic, message) => {\n\t\t\tif (topic.startsWith('temperature/')) {\n\t\t\t\tswitch (getPlace(topic)) {\n\t\t\t\t\tcase 'inside':\n\t\t\t\t\t\tsetters?.setTemperature(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'outside':\n\t\t\t\t\t\toutSetters?.setTemperature(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (topic.startsWith('humidity/')) {\n\t\t\t\tswitch (getPlace(topic)) {\n\t\t\t\t\tcase 'inside':\n\t\t\t\t\t\tsetters.setHumidity(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'outside':\n\t\t\t\t\t\toutSetters.setHumidity(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (topic.startsWith('shellies')) {\n\t\t\t\tconst match = topic.match(/-(?<id>\\w*)/);\n\t\t\t\tif (match?.groups) {\n\t\t\t\t\tconst newState = message.toString() === 'on' ? State.On : State.Off;\n\t\t\t\t\tconst id = match?.groups['id'];\n\t\t\t\t\tsetShellies((xs) =>\n\t\t\t\t\t\txs.map((s) => ({\n\t\t\t\t\t\t\t...s,\n\t\t\t\t\t\t\tstate: s.id === id ? newState : s.state,\n\t\t\t\t\t\t}))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}, [outSetters, setters]);\n\n\tconst allOn = useCallback(() => {\n\t\tshellies.forEach((x) => setShellyState(x, 'on'));\n\t}, [shellies]);\n\tconst allOff = useCallback(() => {\n\t\tshellies.forEach((x) => setShellyState(x, 'off'));\n\t}, [shellies]);\n\n\treturn (\n\t\t<div className=\"flex flex-col justify-center items-center text-center mx-4 text-black dark:text-gray-500\">\n\t\t\t<h1 className=\"text-4xl\">Palletten</h1>\n\t\t\t<div className=\"flex justify-between space-x-6 pb-4 max-w-lg w-full\">\n\t\t\t\t<PlaceState name=\"Inde\" state={inside} />\n\t\t\t\t<PlaceState name=\"Ude\" state={outside} />\n\t\t\t</div>\n\t\t\t<div className=\"w-full flex flex-col justify-center align-middle\">\n\t\t\t\t{shellies.map((shelly) => (\n\t\t\t\t\t<Shelly key={shelly.id} shelly={shelly} />\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t<hr className=\"w-full my-4\" />\n\t\t\t<div className=\"w-full flex flex-col justify-center align-middle\">\n\t\t\t\t<Button onClick={allOn}>T√¶nd alt</Button>\n\t\t\t\t<Button onClick={allOff}>Sluk alt</Button>\n\t\t\t</div>\n\n\t\t\t<hr className=\"w-full my-4\" />\n\t\t\t<DesiredTemperature />\n\t\t</div>\n\t);\n}\n\nexport default App;\n\nconst DesiredTemperature = () => {\n\tconst [temperature, setTemperature] = useState<number>(0);\n\tconst onDesiredTemperatureChange = useCallback(\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst value = event.currentTarget.valueAsNumber;\n\t\t\tsetTemperature(value);\n\t\t\tclient.publish('temperature/set', value.toString(), {\n\t\t\t\tretain: true,\n\t\t\t});\n\t\t},\n\t\t[setTemperature]\n\t);\n\n\tuseEffect(() => {\n\t\tclient.subscribe('temperature/set');\n\t\tclient.on('message', (topic, message) => {\n\t\t\tif (topic === 'temperature/set') {\n\t\t\t\tconst temp = Number(message.toString());\n\t\t\t\tsetTemperature(temp);\n\t\t\t\tclient.unsubscribe('temperature/set');\n\t\t\t}\n\t\t});\n\t}, [setTemperature]);\n\n\treturn (\n\t\t<div className=\"w-full\">\n\t\t\t<input\n\t\t\t\tclassName=\"w-11/12\"\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin=\"0\"\n\t\t\t\tmax=\"25\"\n\t\t\t\tvalue={temperature}\n\t\t\t\tonChange={onDesiredTemperatureChange}\n\t\t\t/>\n\t\t\t<div>√ònskede temperature: {temperature} &#176;C</div>\n\t\t</div>\n\t);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}