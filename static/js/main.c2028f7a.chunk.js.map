{"version":3,"sources":["components/AppTitle.tsx","components/DesiredTemperature.tsx","components/Button.tsx","components/MasterButtons.tsx","models.ts","components/PlaceState.tsx","components/ShellyComponent.tsx","utils/general.ts","components/charts/TemperatureChart.tsx","components/TemperatureHistory.tsx","features/Weather/FalldownVolume.tsx","features/Weather/OpenWeatherMapIcon.tsx","features/Weather/SunriseAndSunset.tsx","components/IconWithText.tsx","features/Weather/Wind.tsx","features/Weather/WeatherDetails.tsx","features/Weather/CurrentWeather.tsx","components/DegreeCelsius.tsx","features/Weather/MoonriseAndMoonset.tsx","features/Weather/DailyForecast.tsx","features/Weather/weatherApi.tsx","features/Weather/index.tsx","serviceWorker.ts","App.tsx","index.tsx"],"names":["titleColors","colors","rose","indigo","teal","lime","purple","cyan","red","amber","AppTitle","className","split","map","c","i","style","color","DesiredTemperature","client","useState","temperature","setTemperature","onDesiredTemperatureChange","useCallback","event","value","currentTarget","valueAsNumber","publish","toString","retain","active","setActive","toggleActive","checked","useEffect","on","topic","message","Number","subscribe","htmlFor","id","type","onChange","hidden","min","max","Button","children","onClick","mapColor","State","MasterButtons","shellies","allOn","forEach","s","setState","allOff","Value","suffix","undefined","PlaceState","state","name","humidity","Shelly","toggle","commandPath","this","ShellyComponent","stateString","useMemo","On","Off","stateToString","stateToColor","size","average","xs","reduce","acc","x","sum","length","axisColor","BarGraph","data","ParentSize","width","margin","xMax","yMax","d","time","y","temp","xScale","scaleBand","range","round","domain","padding","yScale","scaleLinear","Math","compose","scale","accessor","xPoint","yPoint","hourOffset","Date","getTimezoneOffset","height","barHeight","Group","Bar","bandwidth","fill","AxisBottom","top","tickFormat","getHours","stroke","tickStroke","tickLabelProps","fontSize","textAnchor","AxisLeft","left","numTicks","t","TemperatureHistory","inside","setInside","outside","setOutside","startsWith","parseData","TemperatureChart","key","values","JSON","parse","group","date","getFullYear","getMonth","getDate","rv","v","Function","push","Object","keys","hum","reverse","FalldownVolume","props","Icon","OpenWeatherMapIcon","memo","weather","src","icon","title","main","alt","description","loading","displayName","SunriseAndSunset","sunrise","sunset","format","IconWithText","Wind","speed","deg","WiWindy","transform","WeatherDetails","pressure","visibility","wind","WiHumidity","WiBarometer","WiFog","CurrentWeather","feels_like","uvi","wind_speed","wind_deg","gust","wind_gust","rain","snow","Temperatures","DegreeCelsius","MoonriseAndMoonset","moonrise","moonset","DailyForecast","day","dt","getTime","Day","isExpanded","setIsExpanded","DayDetails","WiRain","pop","WiDaySunny","TemperatureThroughoutDay","morn","eve","night","apiKey","baseUrl","coord","a","fetch","response","json","current","hourly","daily","Weather","setData","refresh","getWeather","then","Title","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","url","shelly_data","mqttOptions","qos","App","setClient","connectAsync","warn","connect","version","Main","usePlace","setters","outSetters","setShellies","getPlace","setHumidity","groups","newState","setupHandlers","shelly","ids","Seperator","rootElement","document","getElementById","Application","StrictMode","hasChildNodes","hydrate","render","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c2028f7a.chunk.js","sourcesContent":["import React from 'react';\nimport colors from 'tailwindcss/colors';\n\nconst titleColors = [\n\tcolors.rose,\n\tcolors.indigo,\n\tcolors.teal,\n\tcolors.lime,\n\tcolors.purple,\n\tcolors.cyan,\n\tcolors.red,\n\tcolors.amber,\n];\n\nconst AppTitle: React.FC = () => (\n\t<h1 className=\"text-4xl pt-2\">\n\t\t{'Paletten'.split('').map((c, i) => (\n\t\t\t<span\n\t\t\t\tkey={i}\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: titleColors[i]['500'],\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{c}\n\t\t\t</span>\n\t\t))}\n\t</h1>\n);\n\nexport default AppTitle;\n","import { AsyncMqttClient } from 'async-mqtt';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nconst DesiredTemperature = ({ client }: { client: AsyncMqttClient }) => {\n\tconst [temperature, setTemperature] = useState<number>(0);\n\tconst onDesiredTemperatureChange = useCallback(\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst value = event.currentTarget.valueAsNumber;\n\t\t\tsetTemperature(value);\n\t\t\tclient.publish('temperature/set', value.toString(), {\n\t\t\t\tretain: true,\n\t\t\t});\n\t\t},\n\t\t[client, setTemperature]\n\t);\n\n\tconst [active, setActive] = useState(false);\n\tconst toggleActive = useCallback(\n\t\t(event: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst value = event.currentTarget.checked;\n\t\t\tsetActive(value);\n\t\t\tclient.publish('temperature/auto', value.toString(), {\n\t\t\t\tretain: true,\n\t\t\t});\n\t\t},\n\t\t[client, setActive]\n\t);\n\n\tuseEffect(() => {\n\t\tclient.on('message', (topic, message) => {\n\t\t\tif (topic === 'temperature/set') {\n\t\t\t\tsetTemperature(Number(message.toString()));\n\t\t\t} else if (topic === 'temperature/auto') {\n\t\t\t\tsetActive(message.toString() === 'true');\n\t\t\t}\n\t\t});\n\t\tclient.subscribe('temperature/set');\n\t\tclient.subscribe('temperature/auto');\n\t}, [client, setTemperature]);\n\n\treturn (\n\t\t<div className=\"w-full\">\n\t\t\t<div className=\"space-x-2 h-full\">\n\t\t\t\t<label\n\t\t\t\t\thtmlFor=\"temperature-control\"\n\t\t\t\t\tclassName=\"h-full align-middle text-xl\"\n\t\t\t\t>\n\t\t\t\t\tAutomatisk temperaturkontrol?\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"temperature-control\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonChange={toggleActive}\n\t\t\t\t\tchecked={active}\n\t\t\t\t\tclassName=\"w-6 h-6 align-middle\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div hidden={!active} className=\"pt-4\">\n\t\t\t\t<input\n\t\t\t\t\tid=\"temperature-range\"\n\t\t\t\t\tclassName=\"w-11/12 bg-transparent slider-progress\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'--min': 0,\n\t\t\t\t\t\t\t'--max': 25,\n\t\t\t\t\t\t\t'--value': temperature,\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\t\t} as any\n\t\t\t\t\t}\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tmax=\"25\"\n\t\t\t\t\tvalue={temperature}\n\t\t\t\t\tonChange={onDesiredTemperatureChange}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"temperature-range\">\n\t\t\t\t\tØnskede temperature: {temperature} &#176;C\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DesiredTemperature;\n","import React from 'react';\n\ninterface ButtonProps {\n\tchildren: JSX.Element[] | string;\n\tonClick: () => void;\n\tcolor?: string;\n\tclassName?: string;\n}\n\nexport const Button = ({\n\tcolor,\n\tchildren,\n\tclassName,\n\tonClick,\n}: ButtonProps) => (\n\t<button\n\t\tonClick={onClick}\n\t\tclassName={`text-white p-2 m-2 text-xl rounded ${mapColor(\n\t\t\tcolor ?? 'blue'\n\t\t)} ${className}`}\n\t>\n\t\t{children}\n\t</button>\n);\n\nfunction mapColor(color: string) {\n\tswitch (color) {\n\t\tcase 'blue':\n\t\t\treturn 'bg-blue-900';\n\t\tcase 'red':\n\t\t\treturn 'bg-red-900';\n\t\tcase 'green':\n\t\t\treturn 'bg-green-900';\n\n\t\tdefault:\n\t\t\treturn 'bg-gray-700';\n\t}\n}\n","import React, { useCallback } from 'react';\nimport { Button } from './Button';\nimport { IShelly } from '../models';\n\ninterface MasterButtonsProps {\n\tshellies: IShelly[];\n}\n\nconst MasterButtons = ({ shellies }: MasterButtonsProps) => {\n\tconst allOn = useCallback(() => shellies.forEach((s) => s.setState('on')), [\n\t\tshellies,\n\t]);\n\tconst allOff = useCallback(() => shellies.forEach((s) => s.setState('off')), [\n\t\tshellies,\n\t]);\n\n\treturn (\n\t\t<div className=\"w-full flex flex-row\">\n\t\t\t<Button onClick={allOn} className=\"flex-grow\">\n\t\t\t\tTænd alt\n\t\t\t</Button>\n\t\t\t<Button onClick={allOff} className=\"flex-grow\">\n\t\t\t\tSluk alt\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default MasterButtons;\n","import { AsyncMqttClient } from 'async-mqtt';\n\nexport enum State {\n\tOn,\n\tOff,\n}\n\nexport interface IShelly {\n\tid: string;\n\tname: string;\n\tstate?: State;\n\ttoggle: () => void;\n\tsetState: (state: string) => void;\n}\n\nexport class Shelly implements IShelly {\n\tprivate client: AsyncMqttClient;\n\tid: string;\n\tname: string;\n\tstate?: State | undefined;\n\n\tconstructor(id: string, name: string, client: AsyncMqttClient) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.client = client;\n\t}\n\n\ttoggle = () => this.client.publish(this.commandPath(), 'toggle');\n\tsetState = (state: string) => this.client.publish(this.commandPath(), state);\n\tcommandPath = () => `shellies/shelly1-${this.id}/relay/0/command`;\n}\n\nexport interface IPlace {\n\ttemperature?: number;\n\thumidity?: number;\n}\n\nexport interface TemperatureEntry {\n\ttime: Date;\n\ttemp: number;\n\thum: number;\n}\n","import React from 'react';\nimport { IPlace } from '../models';\n\ninterface PlaceStateProps {\n\tstate: IPlace;\n\tname: string;\n}\n\nconst PlaceState = ({ state, name }: PlaceStateProps) => {\n\treturn (\n\t\t<div className=\"w-full max-w-xs\">\n\t\t\t<h2 className=\"text-xl\">{name}</h2>\n\n\t\t\t<div className=\"flex justify-between w-full\">\n\t\t\t\tTemperatur: <Value value={state.temperature} suffix=\"&#176;C\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex justify-between w-full\">\n\t\t\t\tFugtighed: <Value value={state.humidity} suffix=\"%\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst Value = ({ value, suffix }: { value?: unknown; suffix: string }) => (\n\t<span>{value === undefined ? 'ukendt' : `${value} ${suffix}`}</span>\n);\n\nexport default PlaceState;\n","import React, { useMemo } from 'react';\nimport { IoMdPower } from 'react-icons/io';\nimport { stateToColor } from '../App';\nimport { State } from '../models';\nimport { Button } from './Button';\n\ninterface ShellyCompenentProps {\n\tname: string;\n\tstate?: State;\n\ttoggle: () => void;\n}\n\nconst ShellyComponent = ({ name, state, toggle }: ShellyCompenentProps) => {\n\tconst stateString = useMemo(() => stateToString(state), [state]);\n\n\treturn (\n\t\t<Button className=\"space-x-4\" onClick={toggle} color={stateToColor(state)}>\n\t\t\t<span className=\"inline-flex flex-col h-full justify-center align-middle\">\n\t\t\t\t<IoMdPower size=\"20px\" />\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t{name} - {stateString}\n\t\t\t</span>\n\t\t</Button>\n\t);\n};\n\nfunction stateToString(state?: State): string {\n\tswitch (state) {\n\t\tcase State.On:\n\t\t\treturn 'Tændt';\n\t\tcase State.Off:\n\t\t\treturn 'Slukket';\n\t\tdefault:\n\t\t\treturn 'Ukendt';\n\t}\n}\n\nexport default ShellyComponent;\n","export function groupBy<T>(xs: T[], key) {\n\treturn xs.reduce((rv, x) => {\n\t\tconst v = key instanceof Function ? key(x) : x[key];\n\t\t(rv[v] = rv[v] || []).push(x);\n\t\treturn rv;\n\t}, {});\n}\n\nexport const uniqueHour = (date: Date) =>\n\t`${date.getFullYear()}-${date.getMonth()}-${date.getDate()} ${date.getHours()}`;\n\nexport function average(xs: number[]): number {\n\treturn sum(xs) / xs.length;\n}\n\nexport function sum(xs: number[]): number {\n\treturn xs.reduce((acc, x) => acc + x, 0);\n}\n","import { AxisBottom, AxisLeft } from '@visx/axis';\nimport { Group } from '@visx/group';\nimport { ParentSize } from '@visx/responsive';\nimport { scaleBand, scaleLinear } from '@visx/scale';\nimport { Bar } from '@visx/shape';\nimport { getHours } from 'date-fns';\nimport React from 'react';\nimport colors from 'tailwindcss/colors';\nimport { TemperatureEntry } from '../../models';\n\nconst axisColor = colors.purple['500'];\n\ninterface BarGraphProps {\n\tdata: TemperatureEntry[];\n}\n\nconst BarGraph = ({ data }: BarGraphProps) => {\n\treturn (\n\t\t<ParentSize>\n\t\t\t{({ width }) => {\n\t\t\t\tconst height = 150;\n\t\t\t\tconst margin = { top: 20, bottom: 20, left: 30, right: 0 };\n\n\t\t\t\tconst xMax = width - margin.left - margin.right;\n\t\t\t\tconst yMax = height - margin.top - margin.bottom;\n\n\t\t\t\tconst x = (d) => d.time;\n\t\t\t\tconst y = (d) => d.temp;\n\n\t\t\t\tconst xScale = scaleBand({\n\t\t\t\t\trange: [margin.left, xMax],\n\t\t\t\t\tround: true,\n\t\t\t\t\tdomain: data.map(x),\n\t\t\t\t\tpadding: 0.4,\n\t\t\t\t});\n\t\t\t\tconst yScale = scaleLinear({\n\t\t\t\t\trange: [yMax, 0],\n\t\t\t\t\tround: true,\n\t\t\t\t\tdomain: [Math.min(...data.map(y)) - 2, Math.max(...data.map(y))],\n\t\t\t\t});\n\n\t\t\t\tconst compose = (scale, accessor) => (data) => scale(accessor(data));\n\t\t\t\tconst xPoint = compose(xScale, x);\n\t\t\t\tconst yPoint = compose(yScale, y);\n\n\t\t\t\tconst hourOffset = new Date().getTimezoneOffset() / 60;\n\n\t\t\t\treturn (\n\t\t\t\t\t<svg width={width} height={height}>\n\t\t\t\t\t\t{data.map((d, i) => {\n\t\t\t\t\t\t\tconst barHeight = yMax - yPoint(d);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Group key={`bar-${i}`}>\n\t\t\t\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\t\t\t\tx={xPoint(d)}\n\t\t\t\t\t\t\t\t\t\ty={yMax - barHeight}\n\t\t\t\t\t\t\t\t\t\theight={barHeight}\n\t\t\t\t\t\t\t\t\t\twidth={xScale.bandwidth()}\n\t\t\t\t\t\t\t\t\t\tfill={colors.red['700']}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<AxisBottom\n\t\t\t\t\t\t\ttop={yMax + 10}\n\t\t\t\t\t\t\tscale={xScale}\n\t\t\t\t\t\t\ttickFormat={(d: Date) => `${getHours(d) - hourOffset}`}\n\t\t\t\t\t\t\tstroke={axisColor}\n\t\t\t\t\t\t\ttickStroke={axisColor}\n\t\t\t\t\t\t\ttickLabelProps={() => ({\n\t\t\t\t\t\t\t\tfill: axisColor,\n\t\t\t\t\t\t\t\tfontSize: 11,\n\t\t\t\t\t\t\t\ttextAnchor: 'middle',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AxisLeft\n\t\t\t\t\t\t\tscale={yScale}\n\t\t\t\t\t\t\tleft={margin.left + 10}\n\t\t\t\t\t\t\tnumTicks={5}\n\t\t\t\t\t\t\ttickFormat={(t) => `${t} C`}\n\t\t\t\t\t\t\tstroke={axisColor}\n\t\t\t\t\t\t\ttickStroke={axisColor}\n\t\t\t\t\t\t\ttickLabelProps={() => ({\n\t\t\t\t\t\t\t\tfill: axisColor,\n\t\t\t\t\t\t\t\tfontSize: 11,\n\t\t\t\t\t\t\t\ttextAnchor: 'end',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t);\n\t\t\t}}\n\t\t</ParentSize>\n\t);\n};\n\nexport default BarGraph;\n","import { AsyncMqttClient } from 'async-mqtt';\nimport { parse } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport { TemperatureEntry } from '../models';\nimport { average, groupBy, uniqueHour } from '../utils/general';\nimport TemperatureChart from './charts/TemperatureChart';\n\ninterface TemperatureHistoryProps {\n\tclient: AsyncMqttClient;\n}\n\nconst TemperatureHistory = ({ client }: TemperatureHistoryProps) => {\n\tconst [inside, setInside] = useState<TemperatureEntry[] | undefined>();\n\tconst [outside, setOutside] = useState<TemperatureEntry[] | undefined>();\n\n\tuseEffect(() => {\n\t\tclient.on('message', (topic, message) => {\n\t\t\tif (topic.startsWith('history')) {\n\t\t\t\tif (topic === 'history/inside') {\n\t\t\t\t\tsetInside(parseData(message));\n\t\t\t\t} else if (topic === 'history/outside') {\n\t\t\t\t\tsetOutside(parseData(message));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tclient.subscribe('history/heater/#');\n\t\tclient.subscribe('history/+');\n\t}, [client]);\n\n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"section-header\">Temperature inside</h2>\n\t\t\t{inside && <TemperatureChart data={inside} />}\n\t\t\t<h2 className=\"section-header\">Temperature outside</h2>\n\t\t\t{outside && <TemperatureChart data={outside} />}\n\t\t</>\n\t);\n};\n\nexport default TemperatureHistory;\n\nfunction parseData(message: Buffer): TemperatureEntry[] {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tconst values = (JSON.parse(message.toString()) as any[]).map((x) => ({\n\t\t...x,\n\t\ttime: parse(x.time, 'yyyy-MM-dd HH:mm:ss', 0),\n\t}));\n\n\tconst group = groupBy(values, (x) => uniqueHour(x.time));\n\n\treturn Object.keys(group)\n\t\t.map((x) => ({\n\t\t\ttime: parse(x, 'yyyy-MM-dd HH', 0),\n\t\t\ttemp: average(group[x].map((v) => v.temp)),\n\t\t\thum: average(group[x].map((v) => v.hum)),\n\t\t}))\n\t\t.reverse();\n}\n","import React from 'react';\nimport { WiRain, WiSnow } from 'react-icons/wi';\nimport { WeatherFalldownVolume } from './weatherApi';\n\ninterface FalldownVolumeProps extends WeatherFalldownVolume {\n\ttype: 'Rain' | 'Snow';\n}\n\nconst FalldownVolume = (props: FalldownVolumeProps) => (\n\t<div className=\"w-full flex justify-between\">\n\t\t<Icon type={props.type} />\n\t\t<div className=\"flex flex-col items-end\">\n\t\t\t<span className=\"align-middle\">Last hour: {props['1h']} mm</span>\n\t\t\t<span className=\"align-middle\">Last 3 hours: {props['3h']} mm</span>\n\t\t</div>\n\t</div>\n);\n\nexport default FalldownVolume;\n\nconst Icon = ({ type }: { type: 'Rain' | 'Snow' }) => (\n\t<>\n\t\t{type === 'Rain' ? (\n\t\t\t<WiRain size={32} className=\"inline self-center\" />\n\t\t) : (\n\t\t\t<WiSnow size={32} className=\"inline self-center\" />\n\t\t)}\n\t</>\n);\n","import React, { memo } from 'react';\nimport { WeatherStatus } from './weatherApi';\n\ninterface OpenWeatherMapIconProps {\n\tweather: WeatherStatus;\n}\n\nconst OpenWeatherMapIcon = memo(({ weather }: OpenWeatherMapIconProps) => (\n\t<img\n\t\tsrc={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`}\n\t\ttitle={weather.main}\n\t\talt={weather.description}\n\t\tclassName=\"h-24 max-h-full\"\n\t\tloading=\"lazy\"\n\t/>\n));\n\nOpenWeatherMapIcon.displayName = 'OpenWeatherMapIcon';\nexport default OpenWeatherMapIcon;\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { WiSunrise, WiSunset } from 'react-icons/wi';\n\ninterface SunriseAndSunsetProps {\n\tsunrise: Date;\n\tsunset: Date;\n}\n\nconst SunriseAndSunset = ({ sunrise, sunset }: SunriseAndSunsetProps) => (\n\t<div className=\"w-full flex justify-evenly\">\n\t\t<span>\n\t\t\t<WiSunrise size={32} />\n\t\t\t{format(sunrise, 'H:mm')}\n\t\t</span>\n\t\t<span>\n\t\t\t<WiSunset size={32} />\n\t\t\t{format(sunset, 'H:mm')}\n\t\t</span>\n\t</div>\n);\n\nexport default SunriseAndSunset;\n","import React, { ReactNode } from 'react';\nimport { IconType } from 'react-icons';\n\ninterface IconWithTextProps {\n\ticon: IconType;\n\tchildren: ReactNode;\n}\n\nconst IconWithText = ({ icon, children }: IconWithTextProps) => (\n\t<div>\n\t\t{icon({ size: 24 })}\n\t\t<span className=\"pl-1 align-middle\">{children}</span>\n\t</div>\n);\n\nexport default IconWithText;\n","import React from 'react';\nimport { WiWindDeg, WiWindy } from 'react-icons/wi';\nimport IconWithText from '../../components/IconWithText';\n\ninterface WindProps {\n\tspeed: number;\n\tdeg: number;\n\tgust: number;\n}\n\nconst Wind = ({ speed, deg }: WindProps) => (\n\t<div className=\"flex space-x-2 items-center\">\n\t\t<IconWithText icon={WiWindy}>{speed} m/s</IconWithText>\n\t\t<WiWindDeg transform={`rotate(${deg})`} size={24} />\n\t</div>\n);\n\nexport default Wind;\n","import React from 'react';\nimport { WiBarometer, WiFog, WiHumidity } from 'react-icons/wi';\nimport IconWithText from 'components/IconWithText';\nimport Wind from './Wind';\n\ninterface WeatherDetailsProps {\n\thumidity: number;\n\tpressure: number;\n\tvisibility: number;\n\twind: { speed: number; deg: number; gust: number };\n}\n\nconst WeatherDetails = ({\n\thumidity,\n\tpressure,\n\tvisibility,\n\twind,\n}: WeatherDetailsProps) => (\n\t<div className=\"grid grid-cols-2 gap-y-2 gap-x-4\">\n\t\t<Wind {...wind} />\n\t\t<IconWithText icon={WiHumidity}>{humidity} %</IconWithText>\n\t\t<IconWithText icon={WiBarometer}>{pressure} hPa</IconWithText>\n\t\t<IconWithText icon={WiFog}>{visibility / 1000} km</IconWithText>\n\t</div>\n);\n\nexport default WeatherDetails;\n","import React, { memo } from 'react';\nimport FalldownVolume from './FalldownVolume';\nimport OpenWeatherMapIcon from './OpenWeatherMapIcon';\nimport SunriseAndSunset from './SunriseAndSunset';\nimport { WeatherCurrentResponse } from './weatherApi';\nimport WeatherDetails from './WeatherDetails';\n\nconst CurrentWeather = memo((props: WeatherCurrentResponse) => (\n\t<>\n\t\t<Temperatures\n\t\t\ttemp={props.temp}\n\t\t\tfeels_like={props.feels_like}\n\t\t\tuvi={props.uvi}\n\t\t/>\n\t\t<OpenWeatherMapIcon weather={props.weather[0]} />\n\t\t<SunriseAndSunset sunrise={props.sunrise} sunset={props.sunset} />\n\t\t<WeatherDetails\n\t\t\twind={{\n\t\t\t\tspeed: props.wind_speed,\n\t\t\t\tdeg: props.wind_deg,\n\t\t\t\tgust: props.wind_gust,\n\t\t\t}}\n\t\t\thumidity={props.humidity}\n\t\t\tpressure={props.pressure}\n\t\t\tvisibility={props.visibility}\n\t\t/>\n\t\t{props.rain && <FalldownVolume {...props.rain} type={'Rain'} />}\n\t\t{props.snow && <FalldownVolume {...props.snow} type={'Snow'} />}\n\t</>\n));\nCurrentWeather.displayName = 'CurrentWeather';\n\nexport default CurrentWeather;\n\ninterface TemperatureProps {\n\ttemp: number;\n\tfeels_like: number;\n\tuvi: number;\n}\n\nconst Temperatures = ({ temp, feels_like, uvi }: TemperatureProps) => (\n\t<div className=\"w-full flex justify-evenly\">\n\t\t<span>Now: {Math.round(temp)} &#176;C</span>\n\t\t<span>Feels like: {Math.round(feels_like)} &#176;C</span>\n\t\t<span>UV: {uvi}</span>\n\t</div>\n);\n","import React from 'react';\n\nconst DegreeCelsius = () => <>&#176;C</>;\nexport default DegreeCelsius;\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { WiMoonrise, WiMoonset } from 'react-icons/wi';\n\ninterface MoonriseAndMoonsetProps {\n\tmoonrise: Date;\n\tmoonset: Date;\n}\n\nconst MoonriseAndMoonset = ({ moonrise, moonset }: MoonriseAndMoonsetProps) => (\n\t<div className=\"w-full flex justify-evenly\">\n\t\t<span>\n\t\t\t<WiMoonrise size={32} />\n\t\t\t{format(moonrise, 'H:mm')}\n\t\t</span>\n\t\t<span>\n\t\t\t<WiMoonset size={32} />\n\t\t\t{format(moonset, 'H:mm')}\n\t\t</span>\n\t</div>\n);\n\nexport default MoonriseAndMoonset;\n","import { format } from 'date-fns';\nimport React, { useState } from 'react';\nimport { IoChevronBack, IoChevronDown } from 'react-icons/io5';\nimport {\n\tWiBarometer,\n\tWiDaySunny,\n\tWiHumidity,\n\tWiRain,\n\tWiWindy,\n} from 'react-icons/wi';\nimport DegreeCelsius from '../../components/DegreeCelsius';\nimport IconWithText from '../../components/IconWithText';\nimport MoonriseAndMoonset from './MoonriseAndMoonset';\nimport OpenWeatherMapIcon from './OpenWeatherMapIcon';\nimport SunriseAndSunset from './SunriseAndSunset';\nimport { WeatherDaily } from './weatherApi';\n\ninterface DailyForecastProps {\n\tdata: WeatherDaily[];\n}\n\nconst DailyForecast = ({ data }: DailyForecastProps) => (\n\t<>\n\t\t{data.map((day) => (\n\t\t\t<Day day={day} key={day.dt.getTime()} />\n\t\t))}\n\t</>\n);\n\nexport default DailyForecast;\n\nconst Day = ({ day }: { day: WeatherDaily }) => {\n\tconst [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tclassName=\"w-full flex justify-between items-center\"\n\t\t\t\tonClick={() => setIsExpanded((x) => !x)}\n\t\t\t>\n\t\t\t\t<div className=\"align-middle\">{format(day.dt, 'E, MMM dd')}</div>\n\t\t\t\t<div className=\"flex items-center\">\n\t\t\t\t\t<div className=\"h-12\">\n\t\t\t\t\t\t<OpenWeatherMapIcon weather={day.weather[0]} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{Math.round(day.temp.max)} / {Math.round(day.temp.min)}{' '}\n\t\t\t\t\t\t<DegreeCelsius />\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className=\"pl-4\">\n\t\t\t\t\t\t{isExpanded ? <IoChevronDown /> : <IoChevronBack />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t\t{isExpanded && <DayDetails day={day} />}\n\t\t</>\n\t);\n};\n\nconst DayDetails = ({ day }: { day: WeatherDaily }) => (\n\t<div className=\"rounded p-2 -m-2 bg-gray-200 dark:bg-gray-800\">\n\t\t<div className=\"first-letter:uppercase font-bold\">\n\t\t\t{day.weather[0].description}\n\t\t</div>\n\t\t<div>\n\t\t\tHigh will be {Math.round(day.temp.max)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>\n\t\t\tLow will be {Math.round(day.temp.min)} <DegreeCelsius />\n\t\t</div>\n\t\t<div className=\"grid grid-cols-3 py-4\">\n\t\t\t<IconWithText icon={WiRain}>{day.pop} %</IconWithText>\n\t\t\t<IconWithText icon={WiWindy}>{day.wind_speed} m/s</IconWithText>\n\t\t\t<IconWithText icon={WiBarometer}>{day.pressure} hPa</IconWithText>\n\t\t\t<IconWithText icon={WiHumidity}>{day.humidity} %</IconWithText>\n\t\t\t<IconWithText icon={WiDaySunny}>{day.uvi} UVI</IconWithText>\n\t\t</div>\n\t\t<SunriseAndSunset sunset={day.sunset} sunrise={day.sunrise} />\n\t\t<MoonriseAndMoonset moonset={day.moonset} moonrise={day.moonrise} />\n\t\t<TemperatureThroughoutDay day={day} />\n\t</div>\n);\n\nconst TemperatureThroughoutDay = ({ day }: { day: WeatherDaily }) => (\n\t<div className=\"grid grid-cols-5 grid-rows-3\">\n\t\t<div className=\"col-start-2\">Morning</div>\n\t\t<div>Afternoon</div>\n\t\t<div>Evening</div>\n\t\t<div>Night</div>\n\t\t<div>Temp.</div>\n\t\t<div>\n\t\t\t{Math.round(day.temp.morn)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>\n\t\t\t{Math.round(day.temp.day)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>\n\t\t\t{Math.round(day.temp.eve)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>\n\t\t\t{Math.round(day.temp.night)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>Feels like</div>\n\t\t<div>\n\t\t\t{Math.round(day.feels_like.morn)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>\n\t\t\t{Math.round(day.feels_like.day)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>\n\t\t\t{Math.round(day.feels_like.eve)} <DegreeCelsius />\n\t\t</div>\n\t\t<div>\n\t\t\t{Math.round(day.feels_like.night)} <DegreeCelsius />\n\t\t</div>\n\t</div>\n);\n","const apiKey = '0694b207da3718174af5607fbd520b2d';\nconst baseUrl = 'https://api.openweathermap.org/data/2.5';\nconst coord = { lat: 55.9441, lon: 11.7527 };\n\nexport async function getWeather(): Promise<WeatherResponse> {\n\tconst response = await fetch(\n\t\t`${baseUrl}/onecall?lat=${coord.lat}&lon=${coord.lon}&units=metric&appid=${apiKey}&exclude=minutely`\n\t);\n\tconst data = await response.json();\n\n\treturn {\n\t\t...data,\n\t\tdt: new Date(data.dt * 1000),\n\t\tcurrent: {\n\t\t\t...data.current,\n\t\t\tdt: new Date(data.current.dt * 1000),\n\t\t\tsunrise: new Date(data.current.sunrise * 1000),\n\t\t\tsunset: new Date(data.current.sunset * 1000),\n\t\t},\n\t\thourly: data.hourly?.map((x) => ({\n\t\t\t...x,\n\t\t\tdt: new Date(x.dt * 1000),\n\t\t})),\n\t\tdaily: data.daily?.map((x) => ({\n\t\t\t...x,\n\t\t\tdt: new Date(x.dt * 1000),\n\t\t\tsunset: new Date(x.sunset * 1000),\n\t\t\tsunrise: new Date(x.sunrise * 1000),\n\t\t\tmoonset: new Date(x.moonset * 1000),\n\t\t\tmoonrise: new Date(x.moonrise * 1000),\n\t\t})),\n\t};\n}\n\nexport interface WeatherStatus {\n\tid: number;\n\tmain: string;\n\tdescription: string;\n\ticon: string;\n}\n\nexport interface WeatherWind {\n\tspeed: number;\n\tdeg: number;\n\tgust: number;\n}\n\nexport interface WeatherFalldownVolume {\n\t'1h': number;\n\t'3h': number;\n}\n\nexport interface WeatherResponse {\n\tlat: number;\n\tlon: number;\n\ttimezone: string;\n\ttimezone_offset: number;\n\tcurrent?: WeatherCurrentResponse;\n\tminutely?: WeatherMinutely[];\n\thourly?: WeatherHourly[];\n\tdaily?: WeatherDaily[];\n}\n\nexport interface WeatherCurrentResponse {\n\tdt: Date;\n\tsunrise: Date;\n\tsunset: Date;\n\ttemp: number;\n\tfeels_like: number;\n\tpressure: number;\n\thumidity: number;\n\tdew_point: number;\n\tuvi: number;\n\tclouds: number;\n\tvisibility: number;\n\twind_speed: number;\n\twind_deg: number;\n\twind_gust: number;\n\tweather: WeatherStatus[];\n\train?: WeatherFalldownVolume;\n\tsnow?: WeatherFalldownVolume;\n}\n\ninterface WeatherMinutely {\n\tdt: Date;\n\tprecipitation: number;\n}\n\nexport interface WeatherHourly {\n\tdt: Date;\n\ttemp: number;\n\tfeels_like: number;\n\tpressure: number;\n\thumidity: number;\n\tdew_point: number;\n\tuvi: number;\n\tclouds: number;\n\tvisibility: number;\n\twind_speed: number;\n\twind_deg: number;\n\twind_gust: number;\n\tweather: WeatherStatus[];\n\tpop: number;\n\train?: WeatherFalldownVolume;\n\tsnow?: WeatherFalldownVolume;\n}\n\nexport interface WeatherDaily {\n\tdt: Date;\n\tsunrise: Date;\n\tsunset: Date;\n\tmoonrise: Date;\n\tmoonset: Date;\n\tmoon_phase: number;\n\ttemp: {\n\t\tday: number;\n\t\tmin: number;\n\t\tmax: number;\n\t\tnight: number;\n\t\teve: number;\n\t\tmorn: number;\n\t};\n\tfeels_like: {\n\t\tday: number;\n\t\tnight: number;\n\t\teve: number;\n\t\tmorn: number;\n\t};\n\tpressure: number;\n\thumidity: number;\n\tdew_point: number;\n\twind_speed: number;\n\twind_deg: number;\n\twind_gust: number;\n\tweather: WeatherStatus[];\n\tclouds: number;\n\tpop: number;\n\tuvi: number;\n\train?: WeatherFalldownVolume;\n\tsnow?: WeatherFalldownVolume;\n}\n","import React, { memo, useCallback, useEffect, useState } from 'react';\nimport { IoIosRefresh } from 'react-icons/io';\nimport CurrentWeather from './CurrentWeather';\nimport DailyForecast from './DailyForecast';\nimport { getWeather, WeatherResponse } from './weatherApi';\n\nconst Weather = memo(() => {\n\tconst [data, setData] = useState<WeatherResponse | undefined>();\n\tconst refresh = useCallback(() => getWeather().then(setData), [setData]);\n\n\tuseEffect(() => {\n\t\trefresh();\n\t}, [refresh]);\n\n\treturn (\n\t\t<>\n\t\t\t<Title refresh={refresh} />\n\t\t\t{data?.current && <CurrentWeather {...data.current} />}\n\t\t\t{data?.daily && (\n\t\t\t\t<>\n\t\t\t\t\t<h4 className=\"section-header pt-4\">Daily forecast</h4>\n\t\t\t\t\t<DailyForecast data={data.daily} />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nWeather.displayName = 'Weather';\nexport default Weather;\n\nconst Title = ({ refresh }: { refresh: () => void }) => (\n\t<h2 className=\"relative section-header\">\n\t\tWeather in Rørvig\n\t\t<button className=\"inline absolute top-0 right-0\" onClick={refresh}>\n\t\t\t<IoIosRefresh size={24} />\n\t\t</button>\n\t</h2>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nexport { version } from '../package.json';\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import {\n\tAsyncMqttClient,\n\tconnectAsync,\n\tIClientSubscribeOptions,\n} from 'async-mqtt';\nimport React, { useEffect, useState } from 'react';\nimport AppTitle from './components/AppTitle';\nimport DesiredTemperature from './components/DesiredTemperature';\nimport MasterButtons from './components/MasterButtons';\nimport PlaceState from './components/PlaceState';\nimport ShellyComponent from './components/ShellyComponent';\nimport TemperatureHistory from './components/TemperatureHistory';\nimport Weather from './features/Weather';\nimport { IPlace, IShelly, Shelly, State } from './models';\nimport { version } from 'serviceWorker';\n\nconst url = 'wss://paletten.oliverflecke.me:9001';\n\nconst shelly_data = [\n\t{ id: 'C4402D', name: 'Spisebord' },\n\t{ id: 'C431FB', name: 'Sofa' },\n\t{ id: '10DB9C', name: 'Soveværelse' },\n];\n\nconst mqttOptions: IClientSubscribeOptions = { qos: 1 };\n\nfunction App() {\n\tconst [client, setClient] = useState<AsyncMqttClient | null | undefined>();\n\n\tuseEffect(() => {\n\t\tasync function connect() {\n\t\t\ttry {\n\t\t\t\tconst client = await connectAsync(url, undefined, false);\n\t\t\t\tsetClient(client);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.warn(err);\n\t\t\t\tsetClient(null);\n\t\t\t}\n\t\t}\n\t\tconnect();\n\t}, []);\n\n\tif (client === undefined) {\n\t\treturn (\n\t\t\t<h2 className=\"text-black dark:text-white w-full text-center text-xl\">\n\t\t\t\tConnecting...\n\t\t\t</h2>\n\t\t);\n\t}\n\tif (client === null) {\n\t\treturn (\n\t\t\t<h2 className=\"text-black dark:text-white w-full text-center text-xl\">\n\t\t\t\tFailed to connect. Please contact website developer\n\t\t\t</h2>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Main client={client} />\n\t\t\t<span className=\"text-sm\">Version: {version}</span>\n\t\t</>\n\t);\n}\n\nexport default App;\n\nconst Main = ({ client }: { client: AsyncMqttClient }) => {\n\tconst [inside, setters] = usePlace();\n\tconst [outside, outSetters] = usePlace();\n\n\tconst [shellies, setShellies] = useState<IShelly[]>(() =>\n\t\tshelly_data.map((s) => new Shelly(s.id, s.name, client))\n\t);\n\n\tuseEffect(() => {\n\t\tclient.on('message', (topic, message) => {\n\t\t\t// console.debug(`Received: ${topic} - ${message}`);\n\t\t\tif (topic.startsWith('temperature/')) {\n\t\t\t\tswitch (getPlace(topic)) {\n\t\t\t\t\tcase 'inside':\n\t\t\t\t\t\tsetters?.setTemperature(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'outside':\n\t\t\t\t\t\toutSetters?.setTemperature(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (topic.startsWith('humidity/')) {\n\t\t\t\tswitch (getPlace(topic)) {\n\t\t\t\t\tcase 'inside':\n\t\t\t\t\t\tsetters.setHumidity(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'outside':\n\t\t\t\t\t\toutSetters.setHumidity(Number(message));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (topic.startsWith('shellies')) {\n\t\t\t\tconst match = topic.match(/-(?<id>\\w*)/);\n\t\t\t\tif (match?.groups) {\n\t\t\t\t\tconst newState = message.toString() === 'on' ? State.On : State.Off;\n\t\t\t\t\tconst id = match?.groups['id'];\n\t\t\t\t\tsetShellies((xs) =>\n\t\t\t\t\t\txs.map((s) => ({\n\t\t\t\t\t\t\t...s,\n\t\t\t\t\t\t\tstate: s.id === id ? newState : s.state,\n\t\t\t\t\t\t}))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tasync function setupHandlers(client) {\n\t\t\tsubscribe(\n\t\t\t\tclient,\n\t\t\t\tshellies.map((x) => x.id)\n\t\t\t);\n\t\t}\n\n\t\tsetupHandlers(client);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [client]);\n\n\treturn (\n\t\t<>\n\t\t\t<AppTitle />\n\t\t\t<section className=\"flex justify-between space-x-6 pb-4 max-w-lg w-full\">\n\t\t\t\t<PlaceState name=\"Inde\" state={inside} />\n\t\t\t\t<PlaceState name=\"Ude\" state={outside} />\n\t\t\t</section>\n\t\t\t<section className=\"w-full flex flex-col justify-center align-middle\">\n\t\t\t\t{shellies.map((shelly) => (\n\t\t\t\t\t<ShellyComponent\n\t\t\t\t\t\tkey={shelly.id}\n\t\t\t\t\t\tname={shelly.name}\n\t\t\t\t\t\tstate={shelly.state}\n\t\t\t\t\t\ttoggle={shelly.toggle}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</section>\n\n\t\t\t<Seperator />\n\t\t\t<MasterButtons shellies={shellies} />\n\n\t\t\t<Seperator />\n\t\t\t<DesiredTemperature client={client} />\n\n\t\t\t<Seperator />\n\t\t\t<Weather />\n\n\t\t\t<Seperator />\n\t\t\t<TemperatureHistory client={client} />\n\t\t</>\n\t);\n};\n\nfunction subscribe(client: AsyncMqttClient, ids: string[]) {\n\tids.forEach(\n\t\tasync (id) =>\n\t\t\tawait client.subscribe(`shellies/shelly1-${id}/relay/0`, mqttOptions)\n\t);\n\t['inside', 'outside'].forEach(async (x) => {\n\t\tawait client.subscribe(`temperature/${x}`, mqttOptions);\n\t\tawait client.subscribe(`humidity/${x}`, mqttOptions);\n\t});\n}\n\nfunction getPlace(topic: string): string | undefined {\n\tconst match = topic.match(/\\/(?<place>\\w+)$/);\n\treturn match?.groups ? match?.groups['place'] : undefined;\n}\n\nexport function stateToColor(state?: State): string {\n\tswitch (state) {\n\t\tcase State.Off:\n\t\t\treturn 'red';\n\t\tcase State.On:\n\t\t\treturn 'green';\n\n\t\tdefault:\n\t\t\treturn 'grey';\n\t}\n}\n\nfunction usePlace(): [\n\tIPlace,\n\t{\n\t\tsetTemperature: React.Dispatch<React.SetStateAction<number | undefined>>;\n\t\tsetHumidity: React.Dispatch<React.SetStateAction<number | undefined>>;\n\t}\n] {\n\tconst [temperature, setTemperature] = useState<number | undefined>();\n\tconst [humidity, setHumidity] = useState<number | undefined>();\n\n\treturn [\n\t\t{ temperature, humidity },\n\t\t{ setTemperature, setHumidity },\n\t];\n}\n\nconst Seperator = () => <hr className=\"w-full my-4\" />;\n","import React from 'react';\nimport { render, hydrate } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nconst Application = (\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n);\n\nif (rootElement?.hasChildNodes()) {\n\thydrate(Application, rootElement);\n} else {\n\trender(Application, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}